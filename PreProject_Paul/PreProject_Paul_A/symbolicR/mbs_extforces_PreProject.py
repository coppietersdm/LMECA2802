#
#	MBsysTran - Release 8.1
#
#	Copyright 
#	Universite catholique de Louvain (UCLouvain) 
#	Mechatronic, Electrical Energy, and Dynamic systems (MEED Division) 
#	2, Place du Levant
#	1348 Louvain-la-Neuve 
#	Belgium 
#
#	http://www.robotran.be 
#
#	==> Generation Date: Thu May 23 21:22:39 2024
#
#	==> Project name: PreProject
#
#	==> Number of joints: 19
#
#	==> Function: F19 - External Forces
#
#	==> Git hash: 8f46effdc05c898000a15b4c4dfc8f70efce4fc0
#

from math import sin, cos, sqrt
from numpy import zeros

def extforces(frc, trq, s, tsim):
    q = s.q
    qd = s.qd
    qdd = s.qdd
    frc = s.frc
    trq = s.trq
    PxF1 = zeros(4)
    RxF1 = zeros((4, 4))
    VxF1 = zeros(4)
    OMxF1 = zeros(4)
    AxF1 = zeros(4)
    OMPxF1 = zeros(4)

    PxF2 = zeros(4)
    RxF2 = zeros((4, 4))
    VxF2 = zeros(4)
    OMxF2 = zeros(4)
    AxF2 = zeros(4)
    OMPxF2 = zeros(4)

    PxF3 = zeros(4)
    RxF3 = zeros((4, 4))
    VxF3 = zeros(4)
    OMxF3 = zeros(4)
    AxF3 = zeros(4)
    OMPxF3 = zeros(4)

    PxF4 = zeros(4)
    RxF4 = zeros((4, 4))
    VxF4 = zeros(4)
    OMxF4 = zeros(4)
    AxF4 = zeros(4)
    OMPxF4 = zeros(4)

    PxF5 = zeros(4)
    RxF5 = zeros((4, 4))
    VxF5 = zeros(4)
    OMxF5 = zeros(4)
    AxF5 = zeros(4)
    OMPxF5 = zeros(4)

    PxF6 = zeros(4)
    RxF6 = zeros((4, 4))
    VxF6 = zeros(4)
    OMxF6 = zeros(4)
    AxF6 = zeros(4)
    OMPxF6 = zeros(4)

    PxF7 = zeros(4)
    RxF7 = zeros((4, 4))
    VxF7 = zeros(4)
    OMxF7 = zeros(4)
    AxF7 = zeros(4)
    OMPxF7 = zeros(4)

    PxF8 = zeros(4)
    RxF8 = zeros((4, 4))
    VxF8 = zeros(4)
    OMxF8 = zeros(4)
    AxF8 = zeros(4)
    OMPxF8 = zeros(4)

 
# Trigonometric functions

    S3 = sin(q[3])
    C3 = cos(q[3])
    S4 = sin(q[4])
    C4 = cos(q[4])
    S5 = sin(q[5])
    C5 = cos(q[5])
    S8 = sin(q[8])
    C8 = cos(q[8])
    S9 = sin(q[9])
    C9 = cos(q[9])
    S10 = sin(q[10])
    C10 = cos(q[10])
    S11 = sin(q[11])
    C11 = cos(q[11])
    S12 = sin(q[12])
    C12 = cos(q[12])
    S15 = sin(q[15])
    C15 = cos(q[15])
    S16 = sin(q[16])
    C16 = cos(q[16])
    S17 = sin(q[17])
    C17 = cos(q[17])
    S18 = sin(q[18])
    C18 = cos(q[18])
    S19 = sin(q[19])
    C19 = cos(q[19])
 
# Augmented Joint Position Vectors

 
# Sensor Kinematics

    ROcp1_54 = C3*C4-S3*S4
    ROcp1_64 = C3*S4+S3*C4
    ROcp1_84 = -C3*S4-S3*C4
    ROcp1_94 = C3*C4-S3*S4
    RLcp1_24 = s.dpt[2,1]*C3
    RLcp1_34 = s.dpt[2,1]*S3
    POcp1_24 = q[1]+RLcp1_24
    POcp1_34 = q[2]+RLcp1_34
    OMcp1_14 = qd[3]+qd[4]
    ORcp1_24 = -qd[3]*RLcp1_34
    ORcp1_34 = qd[3]*RLcp1_24
    VIcp1_24 = qd[1]+ORcp1_24
    VIcp1_34 = qd[2]+ORcp1_34
    OPcp1_14 = qdd[3]+qdd[4]
    ACcp1_24 = qdd[1]-qd[3]*ORcp1_34-qdd[3]*RLcp1_34
    ACcp1_34 = qdd[2]+qd[3]*ORcp1_24+qdd[3]*RLcp1_24
    RLcp1_25 = ROcp1_54*s.dpt[2,3]
    RLcp1_35 = ROcp1_64*s.dpt[2,3]
    POcp1_25 = POcp1_24+RLcp1_25
    POcp1_35 = POcp1_34+RLcp1_35
    ORcp1_25 = -OMcp1_14*RLcp1_35
    ORcp1_35 = OMcp1_14*RLcp1_25
    VIcp1_25 = ORcp1_25+VIcp1_24
    VIcp1_35 = ORcp1_35+VIcp1_34
    ACcp1_25 = ACcp1_24-OMcp1_14*ORcp1_35-OPcp1_14*RLcp1_35
    ACcp1_35 = ACcp1_34+OMcp1_14*ORcp1_25+OPcp1_14*RLcp1_25
    PxF1[1] = 0
    PxF1[2] = POcp1_25
    PxF1[3] = POcp1_35
    RxF1[1,1] = (1.0)
    RxF1[2,2] = ROcp1_54
    RxF1[2,3] = ROcp1_64
    RxF1[3,2] = ROcp1_84
    RxF1[3,3] = ROcp1_94
    VxF1[1] = 0
    VxF1[2] = VIcp1_25
    VxF1[3] = VIcp1_35
    OMxF1[1] = OMcp1_14
    OMxF1[2] = 0
    OMxF1[3] = 0
    AxF1[1] = 0
    AxF1[2] = ACcp1_25
    AxF1[3] = ACcp1_35
    OMPxF1[1] = OPcp1_14
    OMPxF1[2] = 0
    OMPxF1[3] = 0
    ROcp2_55 = C3*C5-S3*S5
    ROcp2_65 = C3*S5+S3*C5
    ROcp2_85 = -C3*S5-S3*C5
    ROcp2_95 = C3*C5-S3*S5
    RLcp2_24 = s.dpt[2,2]*C3
    RLcp2_34 = s.dpt[2,2]*S3
    POcp2_24 = q[1]+RLcp2_24
    POcp2_34 = q[2]+RLcp2_34
    OMcp2_14 = qd[3]+qd[5]
    ORcp2_24 = -qd[3]*RLcp2_34
    ORcp2_34 = qd[3]*RLcp2_24
    VIcp2_24 = qd[1]+ORcp2_24
    VIcp2_34 = qd[2]+ORcp2_34
    OPcp2_14 = qdd[3]+qdd[5]
    ACcp2_24 = qdd[1]-qd[3]*ORcp2_34-qdd[3]*RLcp2_34
    ACcp2_34 = qdd[2]+qd[3]*ORcp2_24+qdd[3]*RLcp2_24
    RLcp2_25 = ROcp2_55*s.dpt[2,4]
    RLcp2_35 = ROcp2_65*s.dpt[2,4]
    POcp2_25 = POcp2_24+RLcp2_25
    POcp2_35 = POcp2_34+RLcp2_35
    ORcp2_25 = -OMcp2_14*RLcp2_35
    ORcp2_35 = OMcp2_14*RLcp2_25
    VIcp2_25 = ORcp2_25+VIcp2_24
    VIcp2_35 = ORcp2_35+VIcp2_34
    ACcp2_25 = ACcp2_24-OMcp2_14*ORcp2_35-OPcp2_14*RLcp2_35
    ACcp2_35 = ACcp2_34+OMcp2_14*ORcp2_25+OPcp2_14*RLcp2_25
    PxF2[1] = 0
    PxF2[2] = POcp2_25
    PxF2[3] = POcp2_35
    RxF2[1,1] = (1.0)
    RxF2[2,2] = ROcp2_55
    RxF2[2,3] = ROcp2_65
    RxF2[3,2] = ROcp2_85
    RxF2[3,3] = ROcp2_95
    VxF2[1] = 0
    VxF2[2] = VIcp2_25
    VxF2[3] = VIcp2_35
    OMxF2[1] = OMcp2_14
    OMxF2[2] = 0
    OMxF2[3] = 0
    AxF2[1] = 0
    AxF2[2] = ACcp2_25
    AxF2[3] = ACcp2_35
    OMPxF2[1] = OPcp2_14
    OMPxF2[2] = 0
    OMPxF2[3] = 0
    RLcp3_24 = s.dpt[2,6]*C8
    RLcp3_34 = s.dpt[2,6]*S8
    POcp3_24 = q[6]+RLcp3_24
    POcp3_34 = q[7]+RLcp3_34
    ORcp3_24 = -qd[8]*RLcp3_34
    ORcp3_34 = qd[8]*RLcp3_24
    VIcp3_24 = qd[6]+ORcp3_24
    VIcp3_34 = qd[7]+ORcp3_34
    ACcp3_24 = qdd[6]-qd[8]*ORcp3_34-qdd[8]*RLcp3_34
    ACcp3_34 = qdd[7]+qd[8]*ORcp3_24+qdd[8]*RLcp3_24
    PxF3[1] = 0
    PxF3[2] = POcp3_24
    PxF3[3] = POcp3_34
    RxF3[1,1] = (1.0)
    RxF3[2,2] = C8
    RxF3[2,3] = S8
    RxF3[3,2] = -S8
    RxF3[3,3] = C8
    VxF3[1] = 0
    VxF3[2] = VIcp3_24
    VxF3[3] = VIcp3_34
    OMxF3[1] = qd[8]
    OMxF3[2] = 0
    OMxF3[3] = 0
    AxF3[1] = 0
    AxF3[2] = ACcp3_24
    AxF3[3] = ACcp3_34
    OMPxF3[1] = qdd[8]
    OMPxF3[2] = 0
    OMPxF3[3] = 0
    ROcp4_59 = C8*C9-S8*S9
    ROcp4_69 = C8*S9+S8*C9
    ROcp4_89 = -C8*S9-S8*C9
    ROcp4_99 = C8*C9-S8*S9
    ROcp4_510 = ROcp4_59*C10+ROcp4_89*S10
    ROcp4_610 = ROcp4_69*C10+ROcp4_99*S10
    ROcp4_810 = -ROcp4_59*S10+ROcp4_89*C10
    ROcp4_910 = -ROcp4_69*S10+ROcp4_99*C10
    RLcp4_24 = s.dpt[2,5]*C8
    RLcp4_34 = s.dpt[2,5]*S8
    POcp4_24 = q[6]+RLcp4_24
    POcp4_34 = q[7]+RLcp4_34
    OMcp4_14 = qd[8]+qd[9]
    ORcp4_24 = -qd[8]*RLcp4_34
    ORcp4_34 = qd[8]*RLcp4_24
    VIcp4_24 = qd[6]+ORcp4_24
    VIcp4_34 = qd[7]+ORcp4_34
    OPcp4_14 = qdd[8]+qdd[9]
    ACcp4_24 = qdd[6]-qd[8]*ORcp4_34-qdd[8]*RLcp4_34
    ACcp4_34 = qdd[7]+qd[8]*ORcp4_24+qdd[8]*RLcp4_24
    RLcp4_25 = ROcp4_59*s.dpt[2,7]
    RLcp4_35 = ROcp4_69*s.dpt[2,7]
    POcp4_25 = POcp4_24+RLcp4_25
    POcp4_35 = POcp4_34+RLcp4_35
    OMcp4_15 = qd[10]+OMcp4_14
    ORcp4_25 = -OMcp4_14*RLcp4_35
    ORcp4_35 = OMcp4_14*RLcp4_25
    VIcp4_25 = ORcp4_25+VIcp4_24
    VIcp4_35 = ORcp4_35+VIcp4_34
    OPcp4_15 = qdd[10]+OPcp4_14
    ACcp4_25 = ACcp4_24-OMcp4_14*ORcp4_35-OPcp4_14*RLcp4_35
    ACcp4_35 = ACcp4_34+OMcp4_14*ORcp4_25+OPcp4_14*RLcp4_25
    RLcp4_26 = ROcp4_510*s.dpt[2,8]
    RLcp4_36 = ROcp4_610*s.dpt[2,8]
    POcp4_26 = POcp4_25+RLcp4_26
    POcp4_36 = POcp4_35+RLcp4_36
    ORcp4_26 = -OMcp4_15*RLcp4_36
    ORcp4_36 = OMcp4_15*RLcp4_26
    VIcp4_26 = ORcp4_26+VIcp4_25
    VIcp4_36 = ORcp4_36+VIcp4_35
    ACcp4_26 = ACcp4_25-OMcp4_15*ORcp4_36-OPcp4_15*RLcp4_36
    ACcp4_36 = ACcp4_35+OMcp4_15*ORcp4_26+OPcp4_15*RLcp4_26
    PxF4[1] = 0
    PxF4[2] = POcp4_26
    PxF4[3] = POcp4_36
    RxF4[1,1] = (1.0)
    RxF4[2,2] = ROcp4_510
    RxF4[2,3] = ROcp4_610
    RxF4[3,2] = ROcp4_810
    RxF4[3,3] = ROcp4_910
    VxF4[1] = 0
    VxF4[2] = VIcp4_26
    VxF4[3] = VIcp4_36
    OMxF4[1] = OMcp4_15
    OMxF4[2] = 0
    OMxF4[3] = 0
    AxF4[1] = 0
    AxF4[2] = ACcp4_26
    AxF4[3] = ACcp4_36
    OMPxF4[1] = OPcp4_15
    OMPxF4[2] = 0
    OMPxF4[3] = 0
    ROcp5_511 = C11*C8-S11*S8
    ROcp5_611 = C11*S8+S11*C8
    ROcp5_811 = -C11*S8-S11*C8
    ROcp5_911 = C11*C8-S11*S8
    ROcp5_512 = ROcp5_511*C12+ROcp5_811*S12
    ROcp5_612 = ROcp5_611*C12+ROcp5_911*S12
    ROcp5_812 = -ROcp5_511*S12+ROcp5_811*C12
    ROcp5_912 = -ROcp5_611*S12+ROcp5_911*C12
    RLcp5_24 = s.dpt[2,6]*C8
    RLcp5_34 = s.dpt[2,6]*S8
    POcp5_24 = q[6]+RLcp5_24
    POcp5_34 = q[7]+RLcp5_34
    OMcp5_14 = qd[11]+qd[8]
    ORcp5_24 = -qd[8]*RLcp5_34
    ORcp5_34 = qd[8]*RLcp5_24
    VIcp5_24 = qd[6]+ORcp5_24
    VIcp5_34 = qd[7]+ORcp5_34
    OPcp5_14 = qdd[11]+qdd[8]
    ACcp5_24 = qdd[6]-qd[8]*ORcp5_34-qdd[8]*RLcp5_34
    ACcp5_34 = qdd[7]+qd[8]*ORcp5_24+qdd[8]*RLcp5_24
    RLcp5_25 = ROcp5_511*s.dpt[2,9]
    RLcp5_35 = ROcp5_611*s.dpt[2,9]
    POcp5_25 = POcp5_24+RLcp5_25
    POcp5_35 = POcp5_34+RLcp5_35
    OMcp5_15 = qd[12]+OMcp5_14
    ORcp5_25 = -OMcp5_14*RLcp5_35
    ORcp5_35 = OMcp5_14*RLcp5_25
    VIcp5_25 = ORcp5_25+VIcp5_24
    VIcp5_35 = ORcp5_35+VIcp5_34
    OPcp5_15 = qdd[12]+OPcp5_14
    ACcp5_25 = ACcp5_24-OMcp5_14*ORcp5_35-OPcp5_14*RLcp5_35
    ACcp5_35 = ACcp5_34+OMcp5_14*ORcp5_25+OPcp5_14*RLcp5_25
    RLcp5_26 = ROcp5_512*s.dpt[2,10]
    RLcp5_36 = ROcp5_612*s.dpt[2,10]
    POcp5_26 = POcp5_25+RLcp5_26
    POcp5_36 = POcp5_35+RLcp5_36
    ORcp5_26 = -OMcp5_15*RLcp5_36
    ORcp5_36 = OMcp5_15*RLcp5_26
    VIcp5_26 = ORcp5_26+VIcp5_25
    VIcp5_36 = ORcp5_36+VIcp5_35
    ACcp5_26 = ACcp5_25-OMcp5_15*ORcp5_36-OPcp5_15*RLcp5_36
    ACcp5_36 = ACcp5_35+OMcp5_15*ORcp5_26+OPcp5_15*RLcp5_26
    PxF5[1] = 0
    PxF5[2] = POcp5_26
    PxF5[3] = POcp5_36
    RxF5[1,1] = (1.0)
    RxF5[2,2] = ROcp5_512
    RxF5[2,3] = ROcp5_612
    RxF5[3,2] = ROcp5_812
    RxF5[3,3] = ROcp5_912
    VxF5[1] = 0
    VxF5[2] = VIcp5_26
    VxF5[3] = VIcp5_36
    OMxF5[1] = OMcp5_15
    OMxF5[2] = 0
    OMxF5[3] = 0
    AxF5[1] = 0
    AxF5[2] = ACcp5_26
    AxF5[3] = ACcp5_36
    OMPxF5[1] = OPcp5_15
    OMPxF5[2] = 0
    OMPxF5[3] = 0
    RLcp6_24 = s.dpt[2,11]*C15
    RLcp6_34 = s.dpt[2,11]*S15
    POcp6_24 = q[13]+RLcp6_24
    POcp6_34 = q[14]+RLcp6_34
    ORcp6_24 = -qd[15]*RLcp6_34
    ORcp6_34 = qd[15]*RLcp6_24
    VIcp6_24 = qd[13]+ORcp6_24
    VIcp6_34 = qd[14]+ORcp6_34
    ACcp6_24 = qdd[13]-qd[15]*ORcp6_34-qdd[15]*RLcp6_34
    ACcp6_34 = qdd[14]+qd[15]*ORcp6_24+qdd[15]*RLcp6_24
    PxF6[1] = 0
    PxF6[2] = POcp6_24
    PxF6[3] = POcp6_34
    RxF6[1,1] = (1.0)
    RxF6[2,2] = C15
    RxF6[2,3] = S15
    RxF6[3,2] = -S15
    RxF6[3,3] = C15
    VxF6[1] = 0
    VxF6[2] = VIcp6_24
    VxF6[3] = VIcp6_34
    OMxF6[1] = qd[15]
    OMxF6[2] = 0
    OMxF6[3] = 0
    AxF6[1] = 0
    AxF6[2] = ACcp6_24
    AxF6[3] = ACcp6_34
    OMPxF6[1] = qdd[15]
    OMPxF6[2] = 0
    OMPxF6[3] = 0
    ROcp7_516 = C15*C16-S15*S16
    ROcp7_616 = C15*S16+S15*C16
    ROcp7_816 = -C15*S16-S15*C16
    ROcp7_916 = C15*C16-S15*S16
    ROcp7_517 = ROcp7_516*C17+ROcp7_816*S17
    ROcp7_617 = ROcp7_616*C17+ROcp7_916*S17
    ROcp7_817 = -ROcp7_516*S17+ROcp7_816*C17
    ROcp7_917 = -ROcp7_616*S17+ROcp7_916*C17
    RLcp7_24 = s.dpt[2,11]*C15
    RLcp7_34 = s.dpt[2,11]*S15
    POcp7_24 = q[13]+RLcp7_24
    POcp7_34 = q[14]+RLcp7_34
    OMcp7_14 = qd[15]+qd[16]
    ORcp7_24 = -qd[15]*RLcp7_34
    ORcp7_34 = qd[15]*RLcp7_24
    VIcp7_24 = qd[13]+ORcp7_24
    VIcp7_34 = qd[14]+ORcp7_34
    OPcp7_14 = qdd[15]+qdd[16]
    ACcp7_24 = qdd[13]-qd[15]*ORcp7_34-qdd[15]*RLcp7_34
    ACcp7_34 = qdd[14]+qd[15]*ORcp7_24+qdd[15]*RLcp7_24
    RLcp7_25 = ROcp7_516*s.dpt[2,13]
    RLcp7_35 = ROcp7_616*s.dpt[2,13]
    POcp7_25 = POcp7_24+RLcp7_25
    POcp7_35 = POcp7_34+RLcp7_35
    OMcp7_15 = qd[17]+OMcp7_14
    ORcp7_25 = -OMcp7_14*RLcp7_35
    ORcp7_35 = OMcp7_14*RLcp7_25
    VIcp7_25 = ORcp7_25+VIcp7_24
    VIcp7_35 = ORcp7_35+VIcp7_34
    OPcp7_15 = qdd[17]+OPcp7_14
    ACcp7_25 = ACcp7_24-OMcp7_14*ORcp7_35-OPcp7_14*RLcp7_35
    ACcp7_35 = ACcp7_34+OMcp7_14*ORcp7_25+OPcp7_14*RLcp7_25
    RLcp7_26 = ROcp7_517*s.dpt[2,14]
    RLcp7_36 = ROcp7_617*s.dpt[2,14]
    POcp7_26 = POcp7_25+RLcp7_26
    POcp7_36 = POcp7_35+RLcp7_36
    ORcp7_26 = -OMcp7_15*RLcp7_36
    ORcp7_36 = OMcp7_15*RLcp7_26
    VIcp7_26 = ORcp7_26+VIcp7_25
    VIcp7_36 = ORcp7_36+VIcp7_35
    ACcp7_26 = ACcp7_25-OMcp7_15*ORcp7_36-OPcp7_15*RLcp7_36
    ACcp7_36 = ACcp7_35+OMcp7_15*ORcp7_26+OPcp7_15*RLcp7_26
    PxF7[1] = 0
    PxF7[2] = POcp7_26
    PxF7[3] = POcp7_36
    RxF7[1,1] = (1.0)
    RxF7[2,2] = ROcp7_517
    RxF7[2,3] = ROcp7_617
    RxF7[3,2] = ROcp7_817
    RxF7[3,3] = ROcp7_917
    VxF7[1] = 0
    VxF7[2] = VIcp7_26
    VxF7[3] = VIcp7_36
    OMxF7[1] = OMcp7_15
    OMxF7[2] = 0
    OMxF7[3] = 0
    AxF7[1] = 0
    AxF7[2] = ACcp7_26
    AxF7[3] = ACcp7_36
    OMPxF7[1] = OPcp7_15
    OMPxF7[2] = 0
    OMPxF7[3] = 0
    ROcp8_518 = C15*C18-S15*S18
    ROcp8_618 = C15*S18+S15*C18
    ROcp8_818 = -C15*S18-S15*C18
    ROcp8_918 = C15*C18-S15*S18
    ROcp8_519 = ROcp8_518*C19+ROcp8_818*S19
    ROcp8_619 = ROcp8_618*C19+ROcp8_918*S19
    ROcp8_819 = -ROcp8_518*S19+ROcp8_818*C19
    ROcp8_919 = -ROcp8_618*S19+ROcp8_918*C19
    RLcp8_24 = s.dpt[2,12]*C15
    RLcp8_34 = s.dpt[2,12]*S15
    POcp8_24 = q[13]+RLcp8_24
    POcp8_34 = q[14]+RLcp8_34
    OMcp8_14 = qd[15]+qd[18]
    ORcp8_24 = -qd[15]*RLcp8_34
    ORcp8_34 = qd[15]*RLcp8_24
    VIcp8_24 = qd[13]+ORcp8_24
    VIcp8_34 = qd[14]+ORcp8_34
    OPcp8_14 = qdd[15]+qdd[18]
    ACcp8_24 = qdd[13]-qd[15]*ORcp8_34-qdd[15]*RLcp8_34
    ACcp8_34 = qdd[14]+qd[15]*ORcp8_24+qdd[15]*RLcp8_24
    RLcp8_25 = ROcp8_518*s.dpt[2,15]
    RLcp8_35 = ROcp8_618*s.dpt[2,15]
    POcp8_25 = POcp8_24+RLcp8_25
    POcp8_35 = POcp8_34+RLcp8_35
    OMcp8_15 = qd[19]+OMcp8_14
    ORcp8_25 = -OMcp8_14*RLcp8_35
    ORcp8_35 = OMcp8_14*RLcp8_25
    VIcp8_25 = ORcp8_25+VIcp8_24
    VIcp8_35 = ORcp8_35+VIcp8_34
    OPcp8_15 = qdd[19]+OPcp8_14
    ACcp8_25 = ACcp8_24-OMcp8_14*ORcp8_35-OPcp8_14*RLcp8_35
    ACcp8_35 = ACcp8_34+OMcp8_14*ORcp8_25+OPcp8_14*RLcp8_25
    RLcp8_26 = ROcp8_519*s.dpt[2,16]
    RLcp8_36 = ROcp8_619*s.dpt[2,16]
    POcp8_26 = POcp8_25+RLcp8_26
    POcp8_36 = POcp8_35+RLcp8_36
    ORcp8_26 = -OMcp8_15*RLcp8_36
    ORcp8_36 = OMcp8_15*RLcp8_26
    VIcp8_26 = ORcp8_26+VIcp8_25
    VIcp8_36 = ORcp8_36+VIcp8_35
    ACcp8_26 = ACcp8_25-OMcp8_15*ORcp8_36-OPcp8_15*RLcp8_36
    ACcp8_36 = ACcp8_35+OMcp8_15*ORcp8_26+OPcp8_15*RLcp8_26
    PxF8[1] = 0
    PxF8[2] = POcp8_26
    PxF8[3] = POcp8_36
    RxF8[1,1] = (1.0)
    RxF8[2,2] = ROcp8_519
    RxF8[2,3] = ROcp8_619
    RxF8[3,2] = ROcp8_819
    RxF8[3,3] = ROcp8_919
    VxF8[1] = 0
    VxF8[2] = VIcp8_26
    VxF8[3] = VIcp8_36
    OMxF8[1] = OMcp8_15
    OMxF8[2] = 0
    OMxF8[3] = 0
    AxF8[1] = 0
    AxF8[2] = ACcp8_26
    AxF8[3] = ACcp8_36
    OMPxF8[1] = OPcp8_15
    OMPxF8[2] = 0
    OMPxF8[3] = 0
 
# Sensor Forces 

    SWr1 = s.user_ExtForces(PxF1,RxF1,VxF1,OMxF1,AxF1,OMPxF1,s,tsim,1)
    SWr2 = s.user_ExtForces(PxF2,RxF2,VxF2,OMxF2,AxF2,OMPxF2,s,tsim,2)
    SWr3 = s.user_ExtForces(PxF3,RxF3,VxF3,OMxF3,AxF3,OMPxF3,s,tsim,3)
    SWr4 = s.user_ExtForces(PxF4,RxF4,VxF4,OMxF4,AxF4,OMPxF4,s,tsim,4)
    SWr5 = s.user_ExtForces(PxF5,RxF5,VxF5,OMxF5,AxF5,OMPxF5,s,tsim,5)
    SWr6 = s.user_ExtForces(PxF6,RxF6,VxF6,OMxF6,AxF6,OMPxF6,s,tsim,6)
    SWr7 = s.user_ExtForces(PxF7,RxF7,VxF7,OMxF7,AxF7,OMPxF7,s,tsim,7)
    SWr8 = s.user_ExtForces(PxF8,RxF8,VxF8,OMxF8,AxF8,OMPxF8,s,tsim,8)
    xfrc11 = RxF1[1,1]*SWr1[1]
    xfrc21 = RxF1[2,2]*SWr1[2]+RxF1[2,3]*SWr1[3]
    xfrc31 = RxF1[3,2]*SWr1[2]+RxF1[3,3]*SWr1[3]
    xtrq11 = RxF1[1,1]*SWr1[4]
    xtrq21 = RxF1[2,2]*SWr1[5]+RxF1[2,3]*SWr1[6]
    xtrq31 = RxF1[3,2]*SWr1[5]+RxF1[3,3]*SWr1[6]
    trqext_1_4_0 = xtrq11-xfrc21*SWr1[9]+xfrc31*(SWr1[8]-s.l[2,4])
    trqext_2_4_0 = xtrq21+xfrc11*SWr1[9]-xfrc31*SWr1[7]
    trqext_3_4_0 = xtrq31-xfrc11*(SWr1[8]-s.l[2,4])+xfrc21*SWr1[7]
    xfrc12 = RxF2[1,1]*SWr2[1]
    xfrc22 = RxF2[2,2]*SWr2[2]+RxF2[2,3]*SWr2[3]
    xfrc32 = RxF2[3,2]*SWr2[2]+RxF2[3,3]*SWr2[3]
    xtrq12 = RxF2[1,1]*SWr2[4]
    xtrq22 = RxF2[2,2]*SWr2[5]+RxF2[2,3]*SWr2[6]
    xtrq32 = RxF2[3,2]*SWr2[5]+RxF2[3,3]*SWr2[6]
    trqext_1_5_1 = xtrq12-xfrc22*SWr2[9]+xfrc32*(SWr2[8]-s.l[2,5])
    trqext_2_5_1 = xtrq22+xfrc12*SWr2[9]-xfrc32*SWr2[7]
    trqext_3_5_1 = xtrq32-xfrc12*(SWr2[8]-s.l[2,5])+xfrc22*SWr2[7]
    xfrc13 = RxF3[1,1]*SWr3[1]
    xfrc23 = RxF3[2,2]*SWr3[2]+RxF3[2,3]*SWr3[3]
    xfrc33 = RxF3[3,2]*SWr3[2]+RxF3[3,3]*SWr3[3]
    xtrq13 = RxF3[1,1]*SWr3[4]
    xtrq23 = RxF3[2,2]*SWr3[5]+RxF3[2,3]*SWr3[6]
    xtrq33 = RxF3[3,2]*SWr3[5]+RxF3[3,3]*SWr3[6]
    trqext_1_8_2 = xtrq13-xfrc23*SWr3[9]+xfrc33*SWr3[8]
    trqext_2_8_2 = xtrq23+xfrc13*SWr3[9]-xfrc33*SWr3[7]
    trqext_3_8_2 = xtrq33-xfrc13*SWr3[8]+xfrc23*SWr3[7]
    xfrc14 = RxF4[1,1]*SWr4[1]
    xfrc24 = RxF4[2,2]*SWr4[2]+RxF4[2,3]*SWr4[3]
    xfrc34 = RxF4[3,2]*SWr4[2]+RxF4[3,3]*SWr4[3]
    xtrq14 = RxF4[1,1]*SWr4[4]
    xtrq24 = RxF4[2,2]*SWr4[5]+RxF4[2,3]*SWr4[6]
    xtrq34 = RxF4[3,2]*SWr4[5]+RxF4[3,3]*SWr4[6]
    trqext_1_10_3 = xtrq14-xfrc24*SWr4[9]+xfrc34*(SWr4[8]-s.l[2,10])
    trqext_2_10_3 = xtrq24+xfrc14*SWr4[9]-xfrc34*SWr4[7]
    trqext_3_10_3 = xtrq34-xfrc14*(SWr4[8]-s.l[2,10])+xfrc24*SWr4[7]
    xfrc15 = RxF5[1,1]*SWr5[1]
    xfrc25 = RxF5[2,2]*SWr5[2]+RxF5[2,3]*SWr5[3]
    xfrc35 = RxF5[3,2]*SWr5[2]+RxF5[3,3]*SWr5[3]
    xtrq15 = RxF5[1,1]*SWr5[4]
    xtrq25 = RxF5[2,2]*SWr5[5]+RxF5[2,3]*SWr5[6]
    xtrq35 = RxF5[3,2]*SWr5[5]+RxF5[3,3]*SWr5[6]
    trqext_1_12_4 = xtrq15-xfrc25*SWr5[9]+xfrc35*(SWr5[8]-s.l[2,12])
    trqext_2_12_4 = xtrq25+xfrc15*SWr5[9]-xfrc35*SWr5[7]
    trqext_3_12_4 = xtrq35-xfrc15*(SWr5[8]-s.l[2,12])+xfrc25*SWr5[7]
    xfrc16 = RxF6[1,1]*SWr6[1]
    xfrc26 = RxF6[2,2]*SWr6[2]+RxF6[2,3]*SWr6[3]
    xfrc36 = RxF6[3,2]*SWr6[2]+RxF6[3,3]*SWr6[3]
    xtrq16 = RxF6[1,1]*SWr6[4]
    xtrq26 = RxF6[2,2]*SWr6[5]+RxF6[2,3]*SWr6[6]
    xtrq36 = RxF6[3,2]*SWr6[5]+RxF6[3,3]*SWr6[6]
    trqext_1_15_5 = xtrq16-xfrc26*SWr6[9]+xfrc36*SWr6[8]
    trqext_2_15_5 = xtrq26+xfrc16*SWr6[9]-xfrc36*SWr6[7]
    trqext_3_15_5 = xtrq36-xfrc16*SWr6[8]+xfrc26*SWr6[7]
    xfrc17 = RxF7[1,1]*SWr7[1]
    xfrc27 = RxF7[2,2]*SWr7[2]+RxF7[2,3]*SWr7[3]
    xfrc37 = RxF7[3,2]*SWr7[2]+RxF7[3,3]*SWr7[3]
    xtrq17 = RxF7[1,1]*SWr7[4]
    xtrq27 = RxF7[2,2]*SWr7[5]+RxF7[2,3]*SWr7[6]
    xtrq37 = RxF7[3,2]*SWr7[5]+RxF7[3,3]*SWr7[6]
    trqext_1_17_6 = xtrq17-xfrc27*SWr7[9]+xfrc37*(SWr7[8]-s.l[2,17])
    trqext_2_17_6 = xtrq27+xfrc17*SWr7[9]-xfrc37*SWr7[7]
    trqext_3_17_6 = xtrq37-xfrc17*(SWr7[8]-s.l[2,17])+xfrc27*SWr7[7]
    xfrc18 = RxF8[1,1]*SWr8[1]
    xfrc28 = RxF8[2,2]*SWr8[2]+RxF8[2,3]*SWr8[3]
    xfrc38 = RxF8[3,2]*SWr8[2]+RxF8[3,3]*SWr8[3]
    xtrq18 = RxF8[1,1]*SWr8[4]
    xtrq28 = RxF8[2,2]*SWr8[5]+RxF8[2,3]*SWr8[6]
    xtrq38 = RxF8[3,2]*SWr8[5]+RxF8[3,3]*SWr8[6]
    trqext_1_19_7 = xtrq18-xfrc28*SWr8[9]+xfrc38*(SWr8[8]-s.l[2,19])
    trqext_2_19_7 = xtrq28+xfrc18*SWr8[9]-xfrc38*SWr8[7]
    trqext_3_19_7 = xtrq38-xfrc18*(SWr8[8]-s.l[2,19])+xfrc28*SWr8[7]
 
# Symbolic model output

    frc[1,4] = s.frc[1,4]+xfrc11
    frc[2,4] = s.frc[2,4]+xfrc21
    frc[3,4] = s.frc[3,4]+xfrc31
    trq[1,4] = s.trq[1,4]+trqext_1_4_0
    trq[2,4] = s.trq[2,4]+trqext_2_4_0
    trq[3,4] = s.trq[3,4]+trqext_3_4_0
    frc[1,5] = s.frc[1,5]+xfrc12
    frc[2,5] = s.frc[2,5]+xfrc22
    frc[3,5] = s.frc[3,5]+xfrc32
    trq[1,5] = s.trq[1,5]+trqext_1_5_1
    trq[2,5] = s.trq[2,5]+trqext_2_5_1
    trq[3,5] = s.trq[3,5]+trqext_3_5_1
    frc[1,8] = s.frc[1,8]+xfrc13
    frc[2,8] = s.frc[2,8]+xfrc23
    frc[3,8] = s.frc[3,8]+xfrc33
    trq[1,8] = s.trq[1,8]+trqext_1_8_2
    trq[2,8] = s.trq[2,8]+trqext_2_8_2
    trq[3,8] = s.trq[3,8]+trqext_3_8_2
    frc[1,10] = s.frc[1,10]+xfrc14
    frc[2,10] = s.frc[2,10]+xfrc24
    frc[3,10] = s.frc[3,10]+xfrc34
    trq[1,10] = s.trq[1,10]+trqext_1_10_3
    trq[2,10] = s.trq[2,10]+trqext_2_10_3
    trq[3,10] = s.trq[3,10]+trqext_3_10_3
    frc[1,12] = s.frc[1,12]+xfrc15
    frc[2,12] = s.frc[2,12]+xfrc25
    frc[3,12] = s.frc[3,12]+xfrc35
    trq[1,12] = s.trq[1,12]+trqext_1_12_4
    trq[2,12] = s.trq[2,12]+trqext_2_12_4
    trq[3,12] = s.trq[3,12]+trqext_3_12_4
    frc[1,15] = s.frc[1,15]+xfrc16
    frc[2,15] = s.frc[2,15]+xfrc26
    frc[3,15] = s.frc[3,15]+xfrc36
    trq[1,15] = s.trq[1,15]+trqext_1_15_5
    trq[2,15] = s.trq[2,15]+trqext_2_15_5
    trq[3,15] = s.trq[3,15]+trqext_3_15_5
    frc[1,17] = s.frc[1,17]+xfrc17
    frc[2,17] = s.frc[2,17]+xfrc27
    frc[3,17] = s.frc[3,17]+xfrc37
    trq[1,17] = s.trq[1,17]+trqext_1_17_6
    trq[2,17] = s.trq[2,17]+trqext_2_17_6
    trq[3,17] = s.trq[3,17]+trqext_3_17_6
    frc[1,19] = s.frc[1,19]+xfrc18
    frc[2,19] = s.frc[2,19]+xfrc28
    frc[3,19] = s.frc[3,19]+xfrc38
    trq[1,19] = s.trq[1,19]+trqext_1_19_7
    trq[2,19] = s.trq[2,19]+trqext_2_19_7
    trq[3,19] = s.trq[3,19]+trqext_3_19_7

# Number of continuation lines = 0


